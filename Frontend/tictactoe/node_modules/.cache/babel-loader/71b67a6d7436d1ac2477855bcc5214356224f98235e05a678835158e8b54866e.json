{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setUpSocketIOPing = exports.appendQueryParams = exports.parseSocketIOUrl = void 0;\nvar constants_1 = require(\"./constants\");\nvar parseSocketIOUrl = function (url) {\n  if (url) {\n    var isSecure = /^https|wss/.test(url);\n    var strippedProtocol = url.replace(/^(https?|wss?)(:\\/\\/)?/, '');\n    var removedFinalBackSlack = strippedProtocol.replace(/\\/$/, '');\n    var protocol = isSecure ? 'wss' : 'ws';\n    return \"\".concat(protocol, \"://\").concat(removedFinalBackSlack).concat(constants_1.SOCKET_IO_PATH);\n  } else if (url === '') {\n    var isSecure = /^https/.test(window.location.protocol);\n    var protocol = isSecure ? 'wss' : 'ws';\n    var port = window.location.port ? \":\".concat(window.location.port) : '';\n    return \"\".concat(protocol, \"://\").concat(window.location.hostname).concat(port).concat(constants_1.SOCKET_IO_PATH);\n  }\n  return url;\n};\nexports.parseSocketIOUrl = parseSocketIOUrl;\nvar appendQueryParams = function (url, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  var hasParamsRegex = /\\?([\\w]+=[\\w]+)/;\n  var alreadyHasParams = hasParamsRegex.test(url);\n  var stringified = \"\".concat(Object.entries(params).reduce(function (next, _a) {\n    var key = _a[0],\n      value = _a[1];\n    return next + \"\".concat(key, \"=\").concat(value, \"&\");\n  }, '').slice(0, -1));\n  return \"\".concat(url).concat(alreadyHasParams ? '&' : '?').concat(stringified);\n};\nexports.appendQueryParams = appendQueryParams;\nvar setUpSocketIOPing = function (sendMessage, interval) {\n  if (interval === void 0) {\n    interval = constants_1.SOCKET_IO_PING_INTERVAL;\n  }\n  var ping = function () {\n    return sendMessage(constants_1.SOCKET_IO_PING_CODE);\n  };\n  return window.setInterval(ping, interval);\n};\nexports.setUpSocketIOPing = setUpSocketIOPing;","map":{"version":3,"mappings":";;;;;;AAAA;AAGO,IAAMA,gBAAgB,GAAG,UAACC,GAAW;EAC1C,IAAIA,GAAG,EAAE;IACP,IAAMC,QAAQ,GAAG,YAAY,CAACC,IAAI,CAACF,GAAG,CAAC;IACvC,IAAMG,gBAAgB,GAAGH,GAAG,CAACI,OAAO,CAAC,wBAAwB,EAAE,EAAE,CAAC;IAClE,IAAMC,qBAAqB,GAAGF,gBAAgB,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IACjE,IAAME,QAAQ,GAAGL,QAAQ,GAAG,KAAK,GAAG,IAAI;IAExC,OAAO,UAAGK,QAAQ,gBAAMD,qBAAqB,SAAGE,0BAAc,CAAE;GACjE,MAAM,IAAIP,GAAG,KAAK,EAAE,EAAE;IACrB,IAAMC,QAAQ,GAAG,QAAQ,CAACC,IAAI,CAACM,MAAM,CAACC,QAAQ,CAACH,QAAQ,CAAC;IACxD,IAAMA,QAAQ,GAAGL,QAAQ,GAAG,KAAK,GAAG,IAAI;IACxC,IAAMS,IAAI,GAAGF,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,WAAIF,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAE,GAAG,EAAE;IAEnE,OAAO,UAAGJ,QAAQ,gBAAME,MAAM,CAACC,QAAQ,CAACE,QAAQ,SAAGD,IAAI,SAAGH,0BAAc,CAAE;;EAG5E,OAAOP,GAAG;AACZ,CAAC;AAjBYY,wBAAgB;AAmBtB,IAAMC,iBAAiB,GAAG,UAACb,GAAW,EAAEc,MAAwB;EAAxB;IAAAA,WAAwB;EAAA;EACrE,IAAMC,cAAc,GAAG,iBAAiB;EACxC,IAAMC,gBAAgB,GAAGD,cAAc,CAACb,IAAI,CAACF,GAAG,CAAC;EAEjD,IAAMiB,WAAW,GAAG,UAAGC,MAAM,CAACC,OAAO,CAACL,MAAM,CAAC,CAACM,MAAM,CAAC,UAACC,IAAI,EAAEC,EAAY;QAAXC,GAAG;MAAEC,KAAK;IACrE,OAAOH,IAAI,GAAG,UAAGE,GAAG,cAAIC,KAAK,MAAG;EAClC,CAAC,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE;EAErB,OAAO,UAAGzB,GAAG,SAAGgB,gBAAgB,GAAG,GAAG,GAAG,GAAG,SAAGC,WAAW,CAAE;AAC9D,CAAC;AATYL,yBAAiB;AAWvB,IAAMc,iBAAiB,GAAG,UAACC,WAAwB,EAAEC,QAAkC;EAAlC;IAAAA,WAAWrB,mCAAuB;EAAA;EAC5F,IAAMsB,IAAI,GAAG;IAAM,kBAAW,CAACtB,+BAAmB,CAAC;EAAhC,CAAgC;EAEnD,OAAOC,MAAM,CAACsB,WAAW,CAACD,IAAI,EAAED,QAAQ,CAAC;AAC3C,CAAC;AAJYhB,yBAAiB","names":["parseSocketIOUrl","url","isSecure","test","strippedProtocol","replace","removedFinalBackSlack","protocol","constants_1","window","location","port","hostname","exports","appendQueryParams","params","hasParamsRegex","alreadyHasParams","stringified","Object","entries","reduce","next","_a","key","value","slice","setUpSocketIOPing","sendMessage","interval","ping","setInterval"],"sources":["C:\\Users\\Saad\\tictactoe\\Frontend\\tictactoe\\node_modules\\react-use-websocket\\src\\lib\\socket-io.ts"],"sourcesContent":["import { SOCKET_IO_PING_INTERVAL, SOCKET_IO_PATH, SOCKET_IO_PING_CODE } from './constants';\nimport { QueryParams, SendMessage } from './types';\n\nexport const parseSocketIOUrl = (url: string) => {\n  if (url) {\n    const isSecure = /^https|wss/.test(url);\n    const strippedProtocol = url.replace(/^(https?|wss?)(:\\/\\/)?/, '');\n    const removedFinalBackSlack = strippedProtocol.replace(/\\/$/, '');\n    const protocol = isSecure ? 'wss' : 'ws';\n\n    return `${protocol}://${removedFinalBackSlack}${SOCKET_IO_PATH}`;\n  } else if (url === '') {\n    const isSecure = /^https/.test(window.location.protocol);\n    const protocol = isSecure ? 'wss' : 'ws';\n    const port = window.location.port ? `:${window.location.port}` : '';\n\n    return `${protocol}://${window.location.hostname}${port}${SOCKET_IO_PATH}`;\n  }\n\n  return url;\n};\n\nexport const appendQueryParams = (url: string, params: QueryParams = {}): string => {\n  const hasParamsRegex = /\\?([\\w]+=[\\w]+)/;\n  const alreadyHasParams = hasParamsRegex.test(url);\n\n  const stringified = `${Object.entries(params).reduce((next, [key, value]) => {\n    return next + `${key}=${value}&`;\n  }, '').slice(0, -1)}`;\n\n  return `${url}${alreadyHasParams ? '&' : '?'}${stringified}`;\n};\n\nexport const setUpSocketIOPing = (sendMessage: SendMessage, interval = SOCKET_IO_PING_INTERVAL) => {\n  const ping = () => sendMessage(SOCKET_IO_PING_CODE);\n\n  return window.setInterval(ping, interval);\n};\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}